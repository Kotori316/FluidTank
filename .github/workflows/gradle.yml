name: Java CI

on:
  push:
    branches:
      - "1.19"
    paths:
      - "src/main/scala/**"
      - "src/test/**"
      - "gradle.properties"
      - ".github/workflows/gradle.yml"
  pull_request:
    branches:
      - "1.19"

jobs:
  cross-check-JUnit:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme:1.19.4
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        forge: [ 1.19.4, default ]
    steps:
      - uses: actions/checkout@v3
      - name: Get latest version
        if: ${{ matrix.forge != 'default' }}
        run: |
          ver=$(java -jar $(find / -maxdepth 1 -name "fictional*.jar") ${{ matrix.forge }})
          echo "CI_FORGE=$ver" >> $GITHUB_ENV
          grep $ver gradle.properties && echo "SAME_DEFAULT=true" >> $GITHUB_ENV || echo "SAME_DEFAULT=false" >> $GITHUB_ENV
      - name: Default version
        if: ${{ matrix.forge == 'default' }}
        run: echo "SAME_DEFAULT=false" >> $GITHUB_ENV
      - name: Java Toolchains
        if: ${{ env.SAME_DEFAULT == 'false' }}
        run: chmod +x ./gradlew && ./gradlew checkMethod javaToolchains --no-daemon
      - name: Assemble
        if: ${{ env.SAME_DEFAULT == 'false' }}
        run: chmod +x ./gradlew && ./gradlew assemble --no-daemon
      - name: Test with JUnit
        if: ${{ env.SAME_DEFAULT == 'false' }}
        run: chmod +x ./gradlew && ./gradlew --no-daemon test runGameTestServer runData
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORE_OTHER_MODS_IN_RUNTIME: true
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: build/reports/tests/*
          name: Test-Report-${{ github.run_number }}-${{ matrix.forge }}
